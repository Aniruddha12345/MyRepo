* Interpretation - line by line execution of the code.

* Object based programming language - having all characteristics of object orientation except inheritance & polymorphism.

* static method can not access non static data member and functions directly. Also this & super are not applicable for static method.

* Composition - it is the perticular case of aggregation which represents strong relationship. For ex - class has students, car has engine(without student there is no class so). Aggregation represents weak relationship but composition represents strong relationship.

* Can we declare a constructor as final - as constructor is only for that class so not making sense of declare it as final. It is already final man.

* Anonymous object - new Employee();

* shutdown hook - it is a thread which invoke implicitely just before jvm shutdown. We can perform cleanup operations here. 

* Iterating over Map - 
		Map<Integer, String> map = new HashMap();
		map.put(1, "Aniruddha");
		map.put(2, "Shubham");
		map.put(3, "Aniket");

		for (Map.Entry<Integer, String> entry : map.entrySet()) {       //if want then map.keySet() and map.values()

			System.out.println(entry.getKey());
			System.out.println(entry.getValue());
			System.out.println(entry);
		}
	}